function __Styles(){fillColor=new RgbColor(.75,.91,.94,.7),strokeColor="#255b63",strokeWidth=1}var Prism=ExpandableShape.extend({init:function(a,b,c,d){this._super(d),a/=2,b/=2,c/=2,this.setSurfaces({backSurface:new Surface([new Point3(-a,b,c),new Point3(a,b,c),new Point3(a,-b,c),new Point3(-a,-b,c)]),bottomSurface:new Surface([new Point3(-a,b,c),new Point3(a,b,c),new Point3(a,b,-c),new Point3(-a,b,-c)]),leftSurface:new Surface([new Point3(-a,-b,-c),new Point3(-a,-b,c),new Point3(-a,b,c),new Point3(-a,b,-c)]),rightSurface:new Surface([new Point3(a,b,-c),new Point3(a,b,c),new Point3(a,-b,c),new Point3(a,-b,-c)]),topSurface:new Surface([new Point3(-a,-b,-c),new Point3(a,-b,-c),new Point3(a,-b,c),new Point3(-a,-b,c)]),frontSurface:new Surface([new Point3(-a,-b,-c),new Point3(a,-b,-c),new Point3(a,b,-c),new Point3(-a,b,-c)])})},locked:!1,lastExpand:-1,expand:function(a){if(this.locked)return!1;if(this.lastExpand==-1){this.clearRotations(),this.locked=!0;switch(a){case 3:this.rotateSurfaceX(this.surfaces.topSurface,-Math.PI/2,this.surfaces.topSurface.points[2]),this.rotateSurfaceY(this.surfaces.leftSurface,Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceY(this.surfaces.rightSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!1),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.bottomSurface.points[1]);break;case 2:this.rotateSurfaceY(this.surfaces.rightSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.topSurface,-Math.PI/2,this.surfaces.rightSurface.points[2]),this.rotateSurfaceX(this.surfaces.topSurface,-Math.PI/2,this.surfaces.rightSurface.points[2]),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceY(this.surfaces.leftSurface,Math.PI/2,this.surfaces.leftSurface.points[1],!0),this.rotateSurfaceY(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.bottomSurface.points[0]);break;case 1:this.rotateSurfaceY(this.surfaces.topSurface,Math.PI/2,this.surfaces.topSurface.points[3],!0),this.rotateSurfaceY(this.surfaces.leftSurface,Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceX(this.surfaces.topSurface,-Math.PI/2,this.surfaces.topSurface.points[2]),this.rotateSurfaceY(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.topSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.rightSurface,-Math.PI/2,this.surfaces.topSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.topSurface.points[2],!1),this.rotateSurfaceY(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ()),!0),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ()),!1),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[2].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ()),!0);break;case 0:default:this.rotateSurfaceX(this.surfaces.topSurface,-Math.PI/2,this.surfaces.topSurface.points[2]),this.rotateSurfaceY(this.surfaces.rightSurface,-Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[2]),this.rotateSurfaceY(this.surfaces.frontSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceY(this.surfaces.leftSurface,Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.bottomSurface.points[0])}var b=this;return AnimationManager.delay(function(){b.locked=!1},this.delay),this.delay=0,this.lastExpand=a,!0}this.contract()},contract:function(){if(this.locked)return!1;if(this.lastExpand==-1)return!1;this.locked=!0;switch(this.lastExpand){case 3:this.rotateSurfaceX(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.bottomSurface.points[1]),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceY(this.surfaces.rightSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!1),this.rotateSurfaceY(this.surfaces.leftSurface,-Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceX(this.surfaces.topSurface,Math.PI/2,this.surfaces.topSurface.points[2]);break;case 2:this.rotateSurfaceX(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.bottomSurface.points[0]),this.rotateSurfaceY(this.surfaces.leftSurface,-Math.PI/2,this.surfaces.leftSurface.points[1],!0),this.rotateSurfaceY(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceX(this.surfaces.topSurface,Math.PI/2,this.surfaces.rightSurface.points[2]),this.rotateSurfaceY(this.surfaces.rightSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.topSurface,Math.PI/2,this.surfaces.rightSurface.points[2]);break;case 1:this.rotateSurfaceX(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[2].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceY(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ()),!0),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ()),!1),this.rotateSurfaceY(this.surfaces.bottomSurface,Math.PI/2,this.surfaces.topSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.rightSurface,Math.PI/2,this.surfaces.topSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.topSurface.points[2],!1),this.rotateSurfaceX(this.surfaces.topSurface,Math.PI/2,this.surfaces.topSurface.points[2]),this.rotateSurfaceY(this.surfaces.topSurface,-Math.PI/2,this.surfaces.topSurface.points[3],!0),this.rotateSurfaceY(this.surfaces.leftSurface,-Math.PI/2,this.surfaces.leftSurface.points[1]);break;case 0:default:this.rotateSurfaceX(this.surfaces.bottomSurface,-Math.PI/2,this.surfaces.bottomSurface.points[0]),this.rotateSurfaceY(this.surfaces.leftSurface,-Math.PI/2,this.surfaces.leftSurface.points[1]),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[1].add(this.surfaces.rightSurface.points[1].swapXZ()).subtract(this.surfaces.rightSurface.points[3].swapXZ())),this.rotateSurfaceY(this.surfaces.rightSurface,Math.PI/2,this.surfaces.rightSurface.points[2],!0),this.rotateSurfaceY(this.surfaces.frontSurface,Math.PI/2,this.surfaces.rightSurface.points[2]),this.rotateSurfaceX(this.surfaces.topSurface,Math.PI/2,this.surfaces.topSurface.points[2])}var a=this;return AnimationManager.delay(function(){a.locked=!1},this.delay),this.lastExpand=-1,this.delay=0,!0}}),Pyramid=ExpandableShape.extend({init:function(a,b,c,d){this._super(d),this.width=a,this.height=b,this.length=c,a/=2,b/=2,c/=2,this.setSurfaces({backSurface:new Surface([new Point3(-a,b,c),new Point3(a,b,c),new Point3(0,-b,0)]),bottomSurface:new Surface([new Point3(-a,b,c),new Point3(a,b,c),new Point3(a,b,-c),new Point3(-a,b,-c)]),leftSurface:new Surface([new Point3(0,-b,0),new Point3(-a,b,c),new Point3(-a,b,-c)]),rightSurface:new Surface([new Point3(a,b,-c),new Point3(a,b,c),new Point3(0,-b,0)]),frontSurface:new Surface([new Point3(0,-b,0),new Point3(a,b,-c),new Point3(-a,b,-c)])})},lastExpand:-1,expand:function(a){if(this.lastExpand!=-1)this.contract();else{switch(a){case 0:default:var b=Math.atan(this.width/this.height/2)+Math.PI/2,c=Math.atan(this.length/this.height/2)+Math.PI/2,d=new Point3(0,0,0);this.rotateSurfaceZ(this.surfaces.rightSurface,b,this.surfaces.rightSurface.points[0],!1),this.rotateSurfaceX(this.surfaces.backSurface,-c,this.surfaces.backSurface.points[0],!1),this.rotateSurfaceZ(this.surfaces.leftSurface,-b,this.surfaces.leftSurface.points[1],!1),this.rotateSurfaceX(this.surfaces.frontSurface,c,this.surfaces.frontSurface.points[1],!1),this.rotateSurfaceX(this.surfaces.rightSurface,Math.PI/2,d,!0),this.rotateSurfaceX(this.surfaces.leftSurface,Math.PI/2,d,!0),this.rotateSurfaceX(this.surfaces.frontSurface,Math.PI/2,d,!0),this.rotateSurfaceX(this.surfaces.backSurface,Math.PI/2,d,!0),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,d)}this.lastExpand=a}},contract:function(){if(this.lastExpand==-1)return;switch(this.lastExpand){case 0:default:var a=Math.atan(this.width/this.height/2)+Math.PI/2,b=Math.atan(this.length/this.height/2)+Math.PI/2,c=new Point3(0,0,0);this.rotateSurfaceZ(this.surfaces.rightSurface,a,this.surfaces.rightSurface.points[0],!1),this.rotateSurfaceX(this.surfaces.backSurface,-b,this.surfaces.backSurface.points[0],!1),this.rotateSurfaceZ(this.surfaces.leftSurface,-a,this.surfaces.leftSurface.points[1],!1),this.rotateSurfaceX(this.surfaces.frontSurface,b,this.surfaces.frontSurface.points[1],!1),this.rotateSurfaceX(this.surfaces.rightSurface,Math.PI/2,c,!0),this.rotateSurfaceX(this.surfaces.leftSurface,Math.PI/2,c,!0),this.rotateSurfaceX(this.surfaces.frontSurface,Math.PI/2,c,!0),this.rotateSurfaceX(this.surfaces.backSurface,Math.PI/2,c,!0),this.rotateSurfaceX(this.surfaces.bottomSurface,Math.PI/2,c)}}}),Tetrahedron=ExpandableShape.extend({init:function(a,b){this._super(b),a/=2,this.setSurfaces({backSurface:new Surface([new Point3(a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(-a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(0,-2*a*Math.sqrt(2)/3,0)]),bottomSurface:new Surface([new Point3(-a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(0,a*Math.sqrt(2)/3,-a)]),leftSurface:new Surface([new Point3(-a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(0,a*Math.sqrt(2)/3,-a),new Point3(0,-2*a*Math.sqrt(2)/3,0)]),rightSurface:new Surface([new Point3(a*Math.sqrt(3)/2,a*Math.sqrt(2)/3,a/2),new Point3(0,-2*a*Math.sqrt(2)/3,0),new Point3(0,a*Math.sqrt(2)/3,-a)])})},expand:function(a){switch(a){case 0:default:var b=Math.asin(1/3)+Math.PI/2,c=new Point3(0,0,0)}}}),Animation={init:function(a){var b=Util.createProjectionMatrixForObjectAt(140,100),c=new Prism(50,50,50,b);c.strokeColor="#9b763d",c.fillColor=new RgbColor(.95,.78,.52,.7),c.project(),c.delay=2e3,c.expand(0);var d=Util.createProjectionMatrixForObjectAt(500,90),e=new Prism(50,90,30,d);e.strokeColor="#9c4f4f",e.fillColor=new RgbColor(.91,.62,.62,.7),e.project(),e.delay=8e3,e.expand(0),Main.animationFinished(14e3)}},Interaction={getFramework:function(){return"paper"},init:function(a){Interaction.array=Util.getShuffledArray(4),Interaction.cube=new Prism(80,80,80),Interaction.cube.x=140,Interaction.cube.y=160,Interaction.cube.xorg=Interaction.cube.x,Interaction.cube.yorg=Interaction.cube.y,Interaction.cube.matrix=Util.createProjectionMatrixForObjectAt(Interaction.cube.x,Interaction.cube.y),Interaction.cube.project(),Interaction.prism=new Prism(100,40,70),Interaction.prism.x=400,Interaction.prism.y=160,Interaction.prism.xorg=Interaction.prism.x,Interaction.prism.yorg=Interaction.prism.y,Interaction.prism.matrix=Util.createProjectionMatrixForObjectAt(Interaction.prism.x,Interaction.prism.y),Interaction.prism.project(),Interaction.index=0,Interaction.expanded=!1,Interaction.createTool(),Main.setObjective("Yandaki geometrik cisimlerden açınımını elde etmek istediğinize basınız.")},createTool:function(){var a=new Tool;a.onMouseDown=function(a){if(a.item){var b=a.item.surface.shape,c;b==Interaction.cube?c=Interaction.prism:c=Interaction.cube,Interaction.expanded?b.contract()&&(Interaction.expanded=!1,Main.setObjective("Yandaki geometrik cisimlerden açınımını elde etmek istediğinize basınız."),b.animate({style:{x:b.xorg,y:b.yorg},duration:1e3,delay:5e3,animationType:"easeInEaseOut",update:function(){b.matrix=Util.createProjectionMatrixForObjectAt(b.x,b.y),b.project()}}),c.animate({style:{opacity:1},duration:500,delay:5250,animationType:"easeInEaseOut",update:function(){c.project()}})):(b.delay=1e3,b.expand(Interaction.array[Interaction.index])&&(Interaction.index=(Interaction.index+1)%4,Interaction.expanded=!0,Main.setObjective("Aşağıdaki açınımın hangi geometrik cisim olduğunu görmek için açınıma basınız."),b.animate({style:{x:240,y:160},duration:1e3,animationType:"easeInEaseOut",update:function(){b.matrix=Util.createProjectionMatrixForObjectAt(b.x,b.y),b.project()}}),c.animate({style:{opacity:0},duration:500,delay:250,animationType:"easeInEaseOut",update:function(){c.project()}})))}}}};