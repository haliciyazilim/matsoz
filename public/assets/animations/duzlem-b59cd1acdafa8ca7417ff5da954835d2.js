function __Styles(){planeStyle={fillColor:new RgbColor(.75,.91,.94,.5),strokeColor:"#255b63",strokeWidth:1},clickableAreaStyle={fillColor:new RgbColor(1,1,.6,1),strokeColor:"#255b63",strokeWidth:1},planeSelectedStyle={fillColor:new RgbColor(.15,.36,.39,.7)},typeDivCss={position:"absolute",color:"#c90",border:"2px solid #c90",backgroundColor:"#900",width:"140px",height:"50px",top:"40px",right:"100px",fontWeight:"bold",lineHeight:"46px",textAlign:"center",boxSizing:"border-box"},notExistDivCss={position:"absolute",color:"#cfc",border:"2px outset #afa",backgroundColor:"#363",width:"70px",height:"50px",top:"40px",right:"10px",lineHeight:"46px",textAlign:"center",borderRadius:"25px",boxSizing:"border-box"},notExistDivSelectedCss={toString:function(){return"background-color:#030 !important; border:2px inset #afa !important;"}}}function Plane(a){this.points=a,this.clickableArea=new ClickableArea(this),this.centerPoint=Util.centerOfPoint3s(this.points),this.set_style=function(a){this.style=a},this.setParallelPlane=function(a){this.parallelPlane=a},this.draw=function(){var a=new Path;for(var b=0;b<this.points.length;b++)a.add(projectPoint(this.points[b]));return a.closed=!0,this.style&&a.set_style(this.style),console.log("I'm "),a.class="Plane",a.isPlaneSelected=!1,a.clickableArea=this.clickableArea.draw(),a.clickableArea.plane=a,this.shape=a,a}}function ClickableArea(a){this.plane=a,this.draw=function(){var a=new Path,b=projectPoint(this.plane.centerPoint);for(var c=0;c<=this.plane.points.length;c++){var d=projectPoint(this.plane.points[c%this.plane.points.length]),e=b.findPointTo(d,20,!0);a.add(Math.floor(e.x)+.5,Math.floor(e.y)+.5)}return a.closed=!0,a.class="ClickableArea",a.set_style(clickableAreaStyle),this.shape=a,a}}function Cube(a,b){this.centerPoint=a;var c=a.x,d=a.y,e=b*5;a=[],a[0]=new Point3(c-b*.5,d-b*.5,e+b*.5),a[1]=new Point3(c-b*.5,d+b*.5,e+b*.5),a[2]=new Point3(c+b*.5,d+b*.5,e+b*.5),a[3]=new Point3(c+b*.5,d-b*.5,e+b*.5),a[4]=new Point3(c-b*.5,d-b*.5,e-b*.5),a[5]=new Point3(c-b*.5,d+b*.5,e-b*.5),a[6]=new Point3(c+b*.5,d+b*.5,e-b*.5),a[7]=new Point3(c+b*.5,d-b*.5,e-b*.5),this.planes=[],this.planes.push(new Plane([a[0],a[1],a[2],a[3]])),this.planes.push(new Plane([a[4],a[5],a[6],a[7]])),this.planes.push(new Plane([a[0],a[1],a[5],a[4]])),this.planes.push(new Plane([a[3],a[2],a[6],a[7]])),this.planes.push(new Plane([a[0],a[3],a[7],a[4]])),this.planes.push(new Plane([a[1],a[2],a[6],a[5]])),this.planes[0].setParallelPlane(this.planes[1]),this.planes[2].setParallelPlane(this.planes[3]),this.planes[4].setParallelPlane(this.planes[5]),$(this.planes).each(function(a,b){this.set_style(planeStyle)}),this.draw=function(){var a=[];this.planes.sort(Plane.compare);for(var b=0;b<this.planes.length;b++)a.push(this.planes[b].draw());return a.class="Cube",a}}function projectPoint(a){var b=Util.createProjectionMatrix(Interaction.paper.width,Interaction.paper.height,Interaction.paper.width,Interaction.paper.height,Interaction.paper.width);return Util.project([a.x,a.y,a.z],b)}var Animation={init:function(a){Animation.container=a}},Interaction={getFramework:function(){return"paper"},_types:{PARALLEL:"Paralel Düzlemler",INTERSECTING:"Kesişen Düzlemler"},init:function(a){Interaction.container=a,Main.setObjective("Yandaki geometrik cisimlerin istenen paralel ya da kesişen düzlem ikilisine fare ile tıklayarak gösteriniz. Olmayanlar için “Yok” düğmesine tıklayınız."),Interaction.paper={width:$(a).width(),height:$(a).height()},Interaction.appendStatus({bottom:"40px",right:"40px"}),Interaction.appendButton({bottom:"80px",right:"40px"}),Interaction.typeDiv=document.createElement("div"),$(a).append(Interaction.typeDiv),$(Interaction.typeDiv).attr("id","typeDiv").css(typeDivCss),Interaction.notExistDiv=document.createElement("div"),$(a).append(Interaction.notExistDiv),$(Interaction.notExistDiv).attr({id:"notExistDiv",__selected:"false"}).css(notExistDivCss).html("Yok").click(function(){$(this).attr("__selected")=="false"?($(this).attr("__selected","true"),$(this).addClass("selected")):($(this).attr("__selected","false"),$(this).removeClass("selected"))}),$(a).append("<style>#notExistDiv.selected { "+notExistDivSelectedCss.toString()+" }</style>"),Interaction.setRandomGenerator(8),Interaction.prepareNextQuestion()},nextQuestion:function(a){Interaction.createTool(),Interaction.shape&&Interaction.shape.remove(),Interaction.shapeType=a,Interaction.qType=Util.rand01()==0?Interaction._types.INTERSECTING:Interaction._types.PARALLEL,$(Interaction.typeDiv).html(Interaction.qType);switch(a){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:}var b=new Cube(new Point(0,0),130);console.log(b),Interaction.shape=b.draw(),console.log(Interaction.shape)},preCheck:function(){},isAnswerCorrect:function(a){switch(Interaction.shapeType){case 0:case 1:case 2:case 3:case 5:Interaction.qType==Interaction._types.INTERSECTING&&!Interaction;break;case 4:case 6:case 7:}},onCorrectAnswer:function(){},onWrongAnswer:function(){},onFail:function(){},createTool:function(){Interaction.tool=new Tool,Interaction.tool.count=0,Interaction.tool.onMouseDown=function(a){a.item&&a.item.class=="ClickableArea"&&(a.item.plane.isPlaneSelected==0?this.count<2&&(a.item.plane.set_style(planeSelectedStyle),a.item.plane.isPlaneSelected=!0,this.count++):(a.item.plane.set_style(planeStyle),a.item.plane.isPlaneSelected=!1,this.count--)),console.log(this.count)},Interaction.tool.activate()}};Plane.compare=function(a,b){var c=a.centerPoint,d=b.centerPoint;return c.z>d.z?-1:c.z<d.z?1:c.y<d.y?1:c.y>d.y?-1:c.x>d.x?1:c.x<d.x?-1:0};